DROP DATABASE IF EXISTS bpg29qpszsnrjasj7qkn;

CREATE DATABASE bpg29qpszsnrjasj7qkn;

USE bpg29qpszsnrjasj7qkn;

CREATE TABLE usuarios (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100),
    correo VARCHAR(100) UNIQUE,
    contrase√±a VARCHAR(255),
     fecha_nacimiento DATE,
    saldo DECIMAL(10,2) DEFAULT 0,
    fecha_registro TIMESTAMP DEFAULT CURRENT_TIMESTAMP

);

CREATE TABLE eventos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    titulo VARCHAR(200),
    descripcion TEXT,
    fecha DATETIME,
    lugar VARCHAR(200),
    precio DECIMAL(10,2), 
    categoria VARCHAR(100)
);


CREATE TABLE compras (
    id INT AUTO_INCREMENT PRIMARY KEY,
    usuario_id INT,
    evento_id INT,
    cantidad INT,
    total DECIMAL(10,2),
    stripe_payment_id VARCHAR(255),
    fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (usuario_id) REFERENCES usuarios(id),
    FOREIGN KEY (evento_id) REFERENCES eventos(id)
);

CREATE TABLE entradas (
    id INT AUTO_INCREMENT PRIMARY KEY,
    usuario_id INT,
    evento_id INT,
    compra_id INT,
    precio DECIMAL(10,2),
    fecha_compra TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    estado ENUM('comprada', 'gratis') DEFAULT 'gratis',
    FOREIGN KEY (usuario_id) REFERENCES usuarios(id),
    FOREIGN KEY (evento_id) REFERENCES eventos(id),
    FOREIGN KEY (compra_id) REFERENCES compras(id)
);

CREATE TABLE mensajes_contacto (
    id INT AUTO_INCREMENT PRIMARY KEY,
    usuario_id INT,
    nombre VARCHAR(100),
    correo VARCHAR(100),
    mensaje TEXT,
    fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (usuario_id) REFERENCES usuarios(id)
);

CREATE TABLE fotos_evento (
    id INT AUTO_INCREMENT PRIMARY KEY,
    evento_id INT,
    ruta VARCHAR(255),
    FOREIGN KEY (evento_id) REFERENCES eventos(id) ON DELETE CASCADE
);